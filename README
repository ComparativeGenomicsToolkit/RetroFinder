Here are the steps for running the retro pipeline. Let me know if you have questions about the settings in the DEF file.


mkdir /hive/users/$HOME/mrnaBlastz/
cd /hive/users/$HOME/mrnaBlastz/
cp /cluster/home/baertsch/baertsch/scripts/DEF  .


edit DEF file with following changes:
 RUNDATE - date of this pipeline run
 DB to point to database create retro annotation
 GENOMENAME show reference name in hgcentral.dbDb.scientificName
 BINDIR - location of binaries compiled from retroFinder source
 GBDB set to database name used by genBank getSeqs utility parameter -db
 VERSION version number appended to database tables created  
 NET1 - name of net table used for orthology fairly far
 NET2 - name of net table used for orthology medium distance
 NET3 - name of net table used for orthology fairly close
 ANCIENT1 - name of farthest net, used for age of retro
 ANCIENT2 - name of 2nd farthest net, used for age of retro
 SPECIES - set this to list of databases used to create web pages in step 6 (start with current DB)
 GENES1 - set to knownGene if present or "best gene prediction"
 GENES2 - set to refGene or other gene prediction
 GENES3 - set to ccdsGene or other gene prediction
 ARRAY* - not used
 PDB - set to latest protein database name (i.e. proteinsXXXXXX)
 WEBSERVER - http address of server used to display retro webpages
 ROOTDIR - local directory on webserver - top level directory
 RMSK - table name of repeatmasker or directory containing rmsk output files .out

cp $LOCAL/chrom.sizes to $MRNABASE/S1.len and delete random chroms and chrM.
 
If genbank is not available for the genome, create  $MRNABASE/mrna.fa (sequences for all mRNAs) and 
 $MRNABASE/refseq.fa (mrna transcripts from best available gene annotation from target genome or closely related genome) 
 from other sources and the genbank step will be skipped.

run script:
nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep1.sh DEF

check nohup.out for errors
check cluster run (mrna alignment)

nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep2.sh DEF

nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep3.sh DEF
check cluster run (retros)

nohup /cluster/home/baertsch/baertsch/scripts/filterEst.sh DEF 
    (creates estFilter.psl.gz by extracting and filters est alignments - can be run at anytime)

nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep4.sh DEF
check cluster run (remove overlapping retros)

nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep5.sh DEF (post process and mysql load)
nohup /cluster/home/baertsch/baertsch/scripts/ucscRetroStep6.sh DEF (optiional web pages)

There are four places where the pipeline stops and you have to manually start the next step.

1. end of step2, you need to start step3 manually
2. end of step3, you need to start step4 manually.
3. end of step5, you need to start analyseExpress.sh manually.
4. end of analyseExpress.sh, you need to start step6 manually.

I left it this way since analyseExpress.sh is optional.

the template trackDB entry is written to a file in the $OUTDIR directory called trackDb.retro
