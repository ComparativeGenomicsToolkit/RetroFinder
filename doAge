#!/bin/bash
set -beEu -o pipefail
source $1
INPUT=$2
cut -f 4 $INPUT.bed > $INPUT.lst
sort -k4,4 $INPUT.bed > $INPUT.sort.bed
pslSelect -queries=$INPUT.lst ../../${TABLE}.psl $INPUT.psl

hgsql $DB -N -B -e "select tName, tStart, tEnd, level, qName, qStart, qEnd, type, qN, tR+tTrf, qFar from $NET1" > $NET1.txt
hgsql $DB -N -B -e "select tName, tStart, tEnd, level, qName, qStart, qEnd, type, qN, tR+tTrf, qFar from $NET2" > $NET2.txt
hgsql $DB -N -B -e "select tName, tStart, tEnd, level, qName, qStart, qEnd, type, qN, tR+tTrf, qFar from $NET3" > $NET3.txt
hgsql $DB -N -B -e "select tName, tStart, tEnd, level, qName, qStart, qEnd, type, qN, tR+tTrf, qFar from netPanTro2" > netPanTro2.txt
pslNetOverlap -verbose=2 $INPUT.psl ../../S1.len ../../rmsk.bed.gz netCanFam2.txt netMm8.txt netRheMac2.txt netPanTro2.txt > $INPUT.out 2> $INPUT.log
mkdir -p $INPUT
pushd $INPUT
tawk -f ../age.awk < ../$INPUT.out
awk -f ../ageClass.awk ../$INPUT.out|sort > age.txt
join -1 4 -2 1 ../$INPUT.sort.bed age.txt > $INPUT.age.txt

echo "#!/bin/bash" > doit.sh
echo "set -beEu -o pipefail" >> doit.sh
echo "source $1" >> doit.sh
echo "$SCRIPT/selectById -tsv 1 0ancient.txt 4 ../../../$TABLE.bed >  ${INPUT}.0ancient.bed" >> doit.sh
echo "$SCRIPT/selectById -tsv 1 1mouse.txt 4 ../../../$TABLE.bed >  ${INPUT}.1mouse.bed" >> doit.sh
echo "$SCRIPT/selectById -tsv 1 2rhesus.txt 4 ../../../$TABLE.bed >  ${INPUT}.2rhesus.bed" >> doit.sh
echo "$SCRIPT/selectById -tsv 1 3ape.txt 4 ../../../$TABLE.bed >  ${INPUT}.3ape.bed" >> doit.sh
echo "$SCRIPT/selectById -tsv 1 4human.txt 4 ../../../$TABLE.bed >  ${INPUT}.4human.bed" >> doit.sh
