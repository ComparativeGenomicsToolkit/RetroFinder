RETROFINDER PIPELINE REFACTORING:
Notes on the GetSequenceData python script to get input sequences and
alignments for pslPseudo input. 
2015-01-22
Written script so far to read in variable names, create output files and 
has functions to get the database prefix e.g. hg from hg38. 
__getSeqsFromGenbank() runs gbGetSeqs. Needs output file as input.
In ucscRetroStep1.sh - the sequences are piped through an awk to change 
bases to upper case. Is this necessary? It also substitutes Ns for some 
non-ATCG bases. These could be IUPAC codes and if they are not then want
it to fail at a later step and give error. lastz is now run with option 
--iupac=ambiguous so these codes will be acceptable.

- add import subprocess
- get function working that calls gbGetSeqs, how to you add inputs such as -db=gbdb where gbdb is a variable. Perhaps need to make a string. 
gbdb = "-db=" + self.__getDatabasePrefix()
gbR = "-gbRoot=" + gbRoot

Test:
/cluster/data/genbank/bin/x86_64/gbGetSeqs -inclVersion -native -db=mm \
-gbRoot=/cluster/data/genbank refSeq mrna \
/hive/users/hartera/GencodeWG/retroFinder/trunk/src/pipeline/bin/mm10/20150122/sequenceData/refGene.fa

# this works and returns 33610 RefSeq sequences for mouse, try doing the
# same for GenBank mRNAs. 

- do we want to check if the sequence data files exist and therefore determine
  if we should download new ones or just assume we want to get new files if
  we are running the script. 
- should have a case if either mrna or refSeq is None then don't fetch that.
For now when the GetSeqsFromGenbank() is called it determines the sequence
source from the table name but assumes that is either all_mrna or refGene. 

- try getting the PSL alignments for mRNAs from the table
selectStr = "select
matches,misMatches,repMatches,nCount,qNumInsert,qBaseInsert,tNumInsert,tBaseInsert,strand,qName,qSize,qStart,qEnd,tName,tSize,tStart,tEnd,blockCount,blockSizes,qStarts,tStarts
from" + self.mrna + "limit 1;"
subprocess.check_call(["hgsql", "-Ne", selectStr, self.database],
stdout=outFile)
# didn't seem to work so used a file handle instead and the program ran but
# there was no output file. also needed to have all the directories created. 
# so tried a different way found on internet.
e.g. with open("output.txt", "w+") as output:
    subprocess.call(["python", "./script.py"], stdout=output);
# it does also work with the file handle passed to stdout - just didn't see
# it. It does fail though if the output directory is not created first before
# the program is run.  

- maybe just just have --mrna and --refSeq options and table is assumed or can
  be provided. 

2015-01-23
- Leave mRNA and RefSeq tables as input. if --notGenbank is set to false then
assume these are mRNA and refSeq.
What happens though if one input is mrna and the other is Ensembl? 
Need a --notRefSeq option. 
- for gbGetSeqs, need to determine what the source is so need to pass the
  source to getSeqsFromGenbank so if getting mRNAs and notGenbank if FALSE
then source is genbank. If getting RefSeqs and notRefseq is FALSE then source
is refseq, need to be set before calling getSeqsFromGenbank() and source is
passed to the function instead of the table names.  
- add a function to create output directory for sequences and associated data
- when run the program, the input tables should be PSL so all_mrna and
  refSeqAli.

Questions:
Checking that files are created? 
Do sequences need to be in upper case?
Concatenate results from mySQL queries? 
Should functions be called at bottom of in __init__() 

2015-01-26
Talked to Mark on 1/24 and he suggested I write a library file of common
functions and then have a set of commands getGenbank, getRefseq and
getEnsembl that are called by GetSequenceData.

NOTE: maybe need a general library file that creates the output directory and 
gets the date. 
NOTE: ask Mark if have to import library file and then still put the name of
it prefixed to calling any of its functions. 

- Figure out new argument parsing package and implement.
- Program that calls getGenbankData doesn't know where seqData is so need to
 set variables for these up front.
- the sequenceData directory should ultimately contain a PSL file, a sequence
  file and a CDS file, these are all concatenated results from the individual
input files. 
- do you need a CmdOpts class with the current argument parser package.  

2015-01-27
Mark said that variable numbers of arguments to functions e.g. *args are best
avoided and it is better to use a list. Use a list as input to the catFiles()
function and test this out. 
- how do I get list to work with subprocess?
["cat"] + ["a", "b"]
['cat', 'a', 'b']
- when I get the organism name from output of hsql and pass to subprocess then
  it has newline character in it. how did that happen? how to get rid of it? 
  used strip(). Now the getEnsemblTxSeqsWithVersions.pl is not working, it
says that it MSG: Can not find internal name for species 'Mouse' but it worked
fine before. Tried also changing Mouse to lower case and stil doesn't work. 
Perhaps the BioPerl and Ensembl API libraries need updating. 
