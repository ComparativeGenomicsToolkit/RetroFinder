#!/usr/bin/env python

from __future__ import with_statement

import sys, os, subprocess
import argparse
myBinDir = os.path.normpath(os.path.dirname(sys.argv[0]))
sys.path.append(myBinDir + "/../lib")
from Files import *
from commonOps import *
from ParseConfig import ParseConfig
from SeqAndAlignData import SeqAndAlignData

parser = argparse.ArgumentParser(description='Program to align sequences to genome after removing polyA tails')
parser.add_argument('configFile', metavar='configFile', type=str, help='config file of variables global to the pipeline')
args = parser.parse_args()
       
class AlignMrnas(object):
    def __init__(self, args):
        # set variables for options
        # Config file assignment, check it exists first, exits with an 
        # Exception error if it does not. 
        if fileExists(args.configFile):
            self.cfgFile = args.configFile
        # Read and parse config file
        self.cfgParse = ParseConfig(args.configFile)
        # Get the root run directory
        self.rootDir = self.cfgParse.rootRunDir
        # Get the alignment working directory from config file 
        self.alignDir = self.cfgParse.getAlignDir()

