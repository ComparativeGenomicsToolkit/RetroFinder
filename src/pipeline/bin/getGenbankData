#!/hive/groups/gencode/local/bin/python

from __future__ import with_statement

import sys, os
import argparse
myBinDir = os.path.normpath(os.path.dirname(sys.argv[0]))
sys.path.append(myBinDir + "/../lib")
from commonOps import *
from ParseConfig import ParseConfig
from SeqAndAlignData import SeqAndAlignData

parser = argparse.ArgumentParser(description='Get GenBank mRNA sequence data, PSL alignments and CDS region file')
parser.add_argument('configFile', metavar='configFile', type=str, help='full path of config file of variables global to the pipeline')
args = parser.parse_args()

class getGenbankData(object):
    def __init__(self, args):
        # Object for parsing config file
        self.cfgParse = ParseConfig(args.configFile) 
        self.seqType = self.cfgParse.getSeqVar('mrna')
        # Pass in the ParseConfig object to SeqAndAlignData to access
        # the directory and file names
        self.seqData = SeqAndAlignData(self.seqType, \
            self.cfgParse.getSeqVar('mrnaAlignTable'), self.cfgParse)

    def getSequences(self):
        """Get the sequences in FASTA format"""
        tempDir = self.cfgParse.getTempDir()
        seqFile = createPath(tempDir, self.cfgParse.getSeqFile(self.seqType))     
        print "Seq file is ", seqFile
        # This function is called here as not all get programs for sequence 
        # data use this function to get sequence data. 
        # Ensembl has a different method.
        self.seqData.getGenbankSeqs(self.cfgParse.getSeqVar('gbMrnaSource'), \
            seqFile)

getGb = getGenbankData(args)
getGb.getSequences()
