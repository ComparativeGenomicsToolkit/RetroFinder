#!/hive/groups/gencode/local/bin/python

from __future__ import with_statement

import sys, os, subprocess
import argparse
myBinDir = os.path.normpath(os.path.dirname(sys.argv[0]))
sys.path.append(myBinDir + "/../lib")
from commonOps import *
from SeqAndAlignData import SeqAndAlignData
from ParseConfig import ParseConfig

parser = argparse.ArgumentParser(description='Get GenBank mRNA sequence data, PSL alignments and CDS region file')
parser.add_argument('configFile', metavar='configFile', type=str, help='config file of variables global to the pipeline')
parser.add_argument('ensDb', metavar='ensemblDatabase', type=str, help='Ensembl genome assembly database')
args = parser.parse_args()

class getEnsemblData(object):
    def __init__(self, args):
        # Object for parsing config file
        self.cfgParse = ParseConfig(args.configFile)
        # File of chromosome names and sizes
        self.chromFile = self.cfgParse.chromFile
        # Ensembl database
        self.ensDb = args.ensDb
        # Sequence type i.e. ensembl
        self.seqType = self.cfgParse.getSeqVar('ensembl')
        self.seqData = SeqAndAlignData(self.seqType, \
            self.cfgParse.getSeqVar('ensGpTable'), self.cfgParse, True, \
            True, args.ensDb)
        # This is called here as not all get programs for sequence data will
        # use this function to get sequence data. Ensembl has a different 
        # method. 
        # fileList = [seqData.seqFile, seqData.alignFile]
        # catFiles(tempFile, fileList)
   
    def getSequences(self):
        """Gets the Ensembl sequences"""
        tempDir = self.cfgParse.getTempDir()
        makeDir(tempDir)
        gpFile = createPath(tempDir, self.cfgParse.getGenePredFile(self.seqType))
        seqFile = createPath(tempDir, self.cfgParse.getSeqFile(self.seqType))
        # This is called here as not all get programs for sequence data
        # use the same function to get sequence data. Genbank and Refseq 
        # sequences have a different method. 
        self.seqData.getSeqsFromGenePred(gpFile, seqFile)

getEns = getEnsemblData(args)
getEns.getSequences()
